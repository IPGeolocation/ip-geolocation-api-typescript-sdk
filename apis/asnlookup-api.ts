/* tslint:disable */
/* eslint-disable */
/**
 * IPGeolocation.io - IP intelligence products
 * Ipgeolocation provides a set of APIs to make ip based decisions.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, type RequestArgs, BaseAPI, RequiredError, operationServerMap } from '../base';
// @ts-ignore
import type { ASNResponse } from '../models';
// @ts-ignore
import type { ASNResponseXML } from '../models';
// @ts-ignore
import type { ErrorResponse } from '../models';
// @ts-ignore
import type { ErrorXMLResponse } from '../models';
/**
 * ASNLookupApi - axios parameter creator
 * @export
 */
export const ASNLookupApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * ASN API provides comprehensive details for an ASN including the as name,  organization name, the country of registration, associated domain, and its  type (ISP, host provider, or business). The API also shows the allocation  date of provided ASN and if it is currently allocated or not. It also contains  the routing information including peering, upstreams, and downstreams to help  understand the relationship between different ASNs.  Example Use Cases:  - Looking up ASN information for an IP address (e.g., `GET /asn?ip=8.8.8.8`)  - Retrieving ASN information for a specific ASN number (e.g., `GET /asn?asn=12345`)  - Getting peering relationships for an ASN (e.g., `GET /asn?asn=12345&include=peers`) 
         * @param {string} [ip] query parameter \&#39;ip\&#39;.
         * @param {number} [asn] query paramter \&#39;asn\&#39;.
         * @param {string} [include] This parameter can have four options: a) peers b) downstreams c) upstreams d) routes e) whois_response. You may add any of them in comma-separated way. In order to get the ASN details with peering data, pass peers string in the include parameter like mentioned below.
         * @param {string} [excludes] You can exclude fields from the response according to you requirement with the exception of ip field. For example, you want to remove date_allocated and allocation_status from api response, you can put the keys in excludes parameter like this.
         * @param {string} [fields] You can filter out only those fields which you want to see in the response by using the fields parameter. To retrieve only the AS organization, its country and downstreams in api response, you can put the keys in fields parameter like this. API will combine these fields with the default ASN response. Note: Parameters &#x60;peers, downstreams, upstreams, routes, whois_response&#x60; can be used in both &#x60;include&#x60; , and &#x60;fields&#x60;. If you use include and fields at the same time, fields parameter will be considered only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAsnInfo: async (ip?: string, asn?: number, include?: string, excludes?: string, fields?: string, options: RawAxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/asn`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication ApiKeyAuth required
            await setApiKeyToObject(localVarQueryParameter, "apiKey", configuration)

            if (ip !== undefined) {
                localVarQueryParameter['ip'] = ip;
            }

            if (asn !== undefined) {
                localVarQueryParameter['asn'] = asn;
            }

            if (include !== undefined) {
                localVarQueryParameter['include'] = include;
            }

            if (excludes !== undefined) {
                localVarQueryParameter['excludes'] = excludes;
            }

            if (fields !== undefined) {
                localVarQueryParameter['fields'] = fields;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ASNLookupApi - functional programming interface
 * @export
 */
export const ASNLookupApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ASNLookupApiAxiosParamCreator(configuration)
    return {
        /**
         * ASN API provides comprehensive details for an ASN including the as name,  organization name, the country of registration, associated domain, and its  type (ISP, host provider, or business). The API also shows the allocation  date of provided ASN and if it is currently allocated or not. It also contains  the routing information including peering, upstreams, and downstreams to help  understand the relationship between different ASNs.  Example Use Cases:  - Looking up ASN information for an IP address (e.g., `GET /asn?ip=8.8.8.8`)  - Retrieving ASN information for a specific ASN number (e.g., `GET /asn?asn=12345`)  - Getting peering relationships for an ASN (e.g., `GET /asn?asn=12345&include=peers`) 
         * @param {string} [ip] query parameter \&#39;ip\&#39;.
         * @param {number} [asn] query paramter \&#39;asn\&#39;.
         * @param {string} [include] This parameter can have four options: a) peers b) downstreams c) upstreams d) routes e) whois_response. You may add any of them in comma-separated way. In order to get the ASN details with peering data, pass peers string in the include parameter like mentioned below.
         * @param {string} [excludes] You can exclude fields from the response according to you requirement with the exception of ip field. For example, you want to remove date_allocated and allocation_status from api response, you can put the keys in excludes parameter like this.
         * @param {string} [fields] You can filter out only those fields which you want to see in the response by using the fields parameter. To retrieve only the AS organization, its country and downstreams in api response, you can put the keys in fields parameter like this. API will combine these fields with the default ASN response. Note: Parameters &#x60;peers, downstreams, upstreams, routes, whois_response&#x60; can be used in both &#x60;include&#x60; , and &#x60;fields&#x60;. If you use include and fields at the same time, fields parameter will be considered only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getAsnInfo(ip?: string, asn?: number, include?: string, excludes?: string, fields?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ASNResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getAsnInfo(ip, asn, include, excludes, fields, options);
            const localVarOperationServerIndex = configuration?.serverIndex ?? 0;
            const localVarOperationServerBasePath = operationServerMap['ASNLookupApi.getAsnInfo']?.[localVarOperationServerIndex]?.url;
            return (axios, basePath) => createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)(axios, localVarOperationServerBasePath || basePath);
        },
    }
};

/**
 * ASNLookupApi - factory interface
 * @export
 */
export const ASNLookupApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ASNLookupApiFp(configuration)
    return {
        /**
         * ASN API provides comprehensive details for an ASN including the as name,  organization name, the country of registration, associated domain, and its  type (ISP, host provider, or business). The API also shows the allocation  date of provided ASN and if it is currently allocated or not. It also contains  the routing information including peering, upstreams, and downstreams to help  understand the relationship between different ASNs.  Example Use Cases:  - Looking up ASN information for an IP address (e.g., `GET /asn?ip=8.8.8.8`)  - Retrieving ASN information for a specific ASN number (e.g., `GET /asn?asn=12345`)  - Getting peering relationships for an ASN (e.g., `GET /asn?asn=12345&include=peers`) 
         * @param {ASNLookupApiGetAsnInfoRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAsnInfo(requestParameters: ASNLookupApiGetAsnInfoRequest = {}, options?: RawAxiosRequestConfig): AxiosPromise<ASNResponse> {
            return localVarFp.getAsnInfo(requestParameters.ip, requestParameters.asn, requestParameters.include, requestParameters.excludes, requestParameters.fields, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getAsnInfo operation in ASNLookupApi.
 * @export
 * @interface ASNLookupApiGetAsnInfoRequest
 */
export interface ASNLookupApiGetAsnInfoRequest {
    /**
     * query parameter \&#39;ip\&#39;.
     * @type {string}
     * @memberof ASNLookupApiGetAsnInfo
     */
    readonly ip?: string

    /**
     * query paramter \&#39;asn\&#39;.
     * @type {number}
     * @memberof ASNLookupApiGetAsnInfo
     */
    readonly asn?: number

    /**
     * This parameter can have four options: a) peers b) downstreams c) upstreams d) routes e) whois_response. You may add any of them in comma-separated way. In order to get the ASN details with peering data, pass peers string in the include parameter like mentioned below.
     * @type {string}
     * @memberof ASNLookupApiGetAsnInfo
     */
    readonly include?: string

    /**
     * You can exclude fields from the response according to you requirement with the exception of ip field. For example, you want to remove date_allocated and allocation_status from api response, you can put the keys in excludes parameter like this.
     * @type {string}
     * @memberof ASNLookupApiGetAsnInfo
     */
    readonly excludes?: string

    /**
     * You can filter out only those fields which you want to see in the response by using the fields parameter. To retrieve only the AS organization, its country and downstreams in api response, you can put the keys in fields parameter like this. API will combine these fields with the default ASN response. Note: Parameters &#x60;peers, downstreams, upstreams, routes, whois_response&#x60; can be used in both &#x60;include&#x60; , and &#x60;fields&#x60;. If you use include and fields at the same time, fields parameter will be considered only.
     * @type {string}
     * @memberof ASNLookupApiGetAsnInfo
     */
    readonly fields?: string
}

/**
 * ASNLookupApi - object-oriented interface
 * @export
 * @class ASNLookupApi
 * @extends {BaseAPI}
 */
export class ASNLookupApi extends BaseAPI {
    /**
     * ASN API provides comprehensive details for an ASN including the as name,  organization name, the country of registration, associated domain, and its  type (ISP, host provider, or business). The API also shows the allocation  date of provided ASN and if it is currently allocated or not. It also contains  the routing information including peering, upstreams, and downstreams to help  understand the relationship between different ASNs.  Example Use Cases:  - Looking up ASN information for an IP address (e.g., `GET /asn?ip=8.8.8.8`)  - Retrieving ASN information for a specific ASN number (e.g., `GET /asn?asn=12345`)  - Getting peering relationships for an ASN (e.g., `GET /asn?asn=12345&include=peers`) 
     * @param {ASNLookupApiGetAsnInfoRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ASNLookupApi
     */
    public getAsnInfo(requestParameters: ASNLookupApiGetAsnInfoRequest = {}, options?: RawAxiosRequestConfig) {
        return ASNLookupApiFp(this.configuration).getAsnInfo(requestParameters.ip, requestParameters.asn, requestParameters.include, requestParameters.excludes, requestParameters.fields, options).then((request) => request(this.axios, this.basePath));
    }
}

